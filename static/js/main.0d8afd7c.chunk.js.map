{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timeInterval","this","window","setInterval","setState","console","log","prevProps","oldName","clockName","newName","props","clearInterval","React","Component","App","isClockVisible","showClock","hideClock","setRandomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,kBALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,IAAQN,EAAS,EAAKD,MAAdC,KAER,EAAKO,SAAS,CAAEP,MAAM,IAAIC,MAAOC,uBAGjCM,QAAQC,IAAIT,KACX,OAfP,gCAkBE,SAAmBU,GACjB,IAAmBC,EAAYD,EAAvBE,UACWC,EAAYT,KAAKU,MAA5BF,UAEJF,EAAUE,YAAcR,KAAKU,MAAMF,WAErCJ,QAAQC,IAAR,qCAA0CE,EAA1C,eAAwDE,MAxB9D,kCA4BE,WACEE,cAAcX,KAAKD,gBA7BvB,oBAgCE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KAER,OACE,mCACIA,QArCV,GAA2BgB,IAAMC,WCDpBC,EAAb,4MACEnB,MAAQ,CACNoB,gBAAgB,EAChBP,UAAW,GAHf,EAMEQ,UAAY,WACV,EAAKb,SAAS,CAAEY,gBAAgB,KAPpC,EAUEE,UAAY,WACV,EAAKd,SAAS,CAAEY,gBAAgB,KAXpC,EAcEG,cAAgB,WACd,EAAKf,SAAS,CAAEK,UAAWW,KAAKC,MAAsB,GAAhBD,KAAKE,aAf/C,4CAkBE,WACE,MAAsCrB,KAAKL,MAAnCa,EAAR,EAAQA,UAAWO,EAAnB,EAAmBA,eAEnB,OACE,sBAAKO,UAAU,MAAf,UACE,mDAAoBd,KACpB,8CAEG,IACAO,GAAkB,cAAC,EAAD,CAAOP,UAAWA,OAGvC,wBACEe,KAAK,SACLC,QAASxB,KAAKiB,UAFhB,wBAOA,wBACEM,KAAK,SACLC,QAASxB,KAAKgB,UAFhB,wBAOA,wBACEO,KAAK,SACLC,QAASxB,KAAKkB,cAFhB,oCA5CR,GAAyBN,IAAMC,WCN/BY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0d8afd7c.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: string;\n};\n\ntype Props = {\n  clockName: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timeInterval: number | undefined;\n\n  componentDidMount() {\n    this.timeInterval = window.setInterval(() => {\n      const { time } = this.state;\n\n      this.setState({ time: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line\n      console.log(time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName: oldName } = prevProps;\n    const { clockName: newName } = this.props;\n\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeInterval);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <>\n        { time }\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 10) });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{`React clock ${clockName}`}</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && <Clock clockName={clockName} /> }\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}